/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package calculator;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.util.Arrays;

public class Calculator extends JFrame {

    /**
     * Creates new form CalculatorUI
     */
    public Calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTabbedPane = new JTabbedPane();
        simpleCalculatorPane = new JPanel();
        answerField = new JTextField();
        inputField = new JTextField();
        sevenButton = new JButton();
        nineButton = new JButton();
        eightButton = new JButton();
        fourButton = new JButton();
        fiveButton = new JButton();
        sixButton = new JButton();
        oneButton = new JButton();
        twoButton = new JButton();
        threeButton = new JButton();
        addButton = new JButton();
        minusButton = new JButton();
        divideButton = new JButton();
        multiplyButton = new JButton();
        zeroButton = new JButton();
        solveButton = new JButton();
        backSpaceButton = new JButton();
        openBracketButton = new JButton();
        closeBracketButton = new JButton();
        powerButton = new JButton();
        clearButton = new JButton();
        trianglePane = new JPanel();
        secondSideField = new JTextField();
        firstSideField = new JTextField();
        thirdSideField = new JTextField();
        checkSidesButton = new JButton();
        decimalPointSelector = new JSlider();
        decimalPointLabel = new JLabel();
        isTriangleLabel = new JLabel();
        areaLabel = new JLabel();
        angle1Label = new JLabel();
        angle2Label = new JLabel();
        angle3Label = new JLabel();
        equationPane = new JPanel();
        x1TextField = new JTextField();
        x1Label = new JLabel();
        y1TextField = new JTextField();
        y1Label = new JLabel();
        x2TextField = new JTextField();
        x2Label = new JLabel();
        y2TextField = new JTextField();
        y2Label = new JLabel();
        equals1Label = new JLabel();
        equals2Label = new JLabel();
        c1TextField = new JTextField();
        c2TextField = new JTextField();
        plus1Label = new JLabel();
        plus2Label = new JLabel();
        solveEquationsButton = new JButton();
        equationYAnswerLabel = new JLabel();
        equationXAnswerLabel = new JLabel();
        lineOrCurvePane = new JPanel();
        lineOrCurveInstructionLabel = new JLabel();
        lineOrCurveTextField = new JTextField();
        findGradientLabel = new JButton();
        gradientEnterXLabel = new JLabel();
        gradientXTextField = new JTextField();
        gradientAnswerLabel = new JLabel();
        irqPane = new JPanel();
        irqInputTextField = new JTextField();
        irqInputINstructionLabel = new JLabel();
        calculateIRQButton = new JButton();
        noOfValuesLable = new JLabel();
        irqAnswerLabel = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculator");
        setResizable(false);

        answerField.setEditable(false);

        inputField.setEditable(false);

        sevenButton.setText("7");
        sevenButton.addActionListener(evt -> sevenButtonActionPerformed(evt));

        nineButton.setText("9");
        nineButton.addActionListener(evt -> nineButtonActionPerformed(evt));

        eightButton.setText("8");
        eightButton.addActionListener(evt -> eightButtonActionPerformed(evt));

        fourButton.setText("4");
        fourButton.addActionListener(evt -> fourButtonActionPerformed(evt));

        fiveButton.setText("5");
        fiveButton.addActionListener(evt -> fiveButtonActionPerformed(evt));

        sixButton.setText("6");
        sixButton.addActionListener(evt -> sixButtonActionPerformed(evt));

        oneButton.setText("1");
        oneButton.addActionListener(evt -> oneButtonActionPerformed(evt));

        twoButton.setText("2");
        twoButton.addActionListener(evt -> twoButtonActionPerformed(evt));

        threeButton.setText("3");
        threeButton.addActionListener(evt -> threeButtonActionPerformed(evt));

        addButton.setText("+");
        addButton.addActionListener(evt -> addButtonActionPerformed(evt));

        minusButton.setText("-");
        minusButton.addActionListener(evt -> minusButtonActionPerformed(evt));

        divideButton.setText("/");
        divideButton.addActionListener(evt -> divideButtonActionPerformed(evt));

        multiplyButton.setText("*");
        multiplyButton.addActionListener(evt -> multiplyButtonActionPerformed(evt));

        zeroButton.setText("0");
        zeroButton.addActionListener(evt -> zeroButtonActionPerformed(evt));

        solveButton.setText("Solve");
        solveButton.addActionListener(evt -> solveButtonActionPerformed(evt));

        backSpaceButton.setText("backspace <");
        backSpaceButton.addActionListener(evt -> backSpaceButtonActionPerformed(evt));

        openBracketButton.setText("(");
        openBracketButton.addActionListener(evt -> openBracketButtonActionPerformed(evt));

        closeBracketButton.setText(")");
        closeBracketButton.addActionListener(evt -> closeBracketButtonActionPerformed(evt));

        powerButton.setText("^");
        powerButton.addActionListener(evt -> powerButtonActionPerformed(evt));

        clearButton.setText("Clear");
        clearButton.addActionListener(evt -> clearButtonActionPerformed(evt));

        GroupLayout simpleCalculatorPaneLayout = new GroupLayout(simpleCalculatorPane);
        simpleCalculatorPane.setLayout(simpleCalculatorPaneLayout);
        simpleCalculatorPaneLayout.setHorizontalGroup(
                simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(simpleCalculatorPaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(inputField)
                                        .addComponent(answerField)
                                        .addGroup(simpleCalculatorPaneLayout.createSequentialGroup()
                                                .addGroup(simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(simpleCalculatorPaneLayout.createSequentialGroup()
                                                                .addGroup(simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                        .addGroup(simpleCalculatorPaneLayout.createSequentialGroup()
                                                                                .addComponent(fourButton)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(fiveButton)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(sixButton))
                                                                        .addGroup(simpleCalculatorPaneLayout.createSequentialGroup()
                                                                                .addComponent(oneButton)
                                                                                .addGap(18, 18, 18)
                                                                                .addGroup(simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                                        .addGroup(simpleCalculatorPaneLayout.createSequentialGroup()
                                                                                                .addComponent(zeroButton)
                                                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                                .addComponent(clearButton, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                                        .addGroup(simpleCalculatorPaneLayout.createSequentialGroup()
                                                                                                .addComponent(twoButton)
                                                                                                .addGap(18, 18, 18)
                                                                                                .addComponent(threeButton)))))
                                                                .addGap(14, 14, 14)
                                                                .addGroup(simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                                        .addGroup(simpleCalculatorPaneLayout.createSequentialGroup()
                                                                                .addComponent(multiplyButton)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(divideButton))
                                                                        .addComponent(solveButton, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                        .addGroup(simpleCalculatorPaneLayout.createSequentialGroup()
                                                                .addComponent(sevenButton)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(eightButton)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(nineButton)
                                                                .addGap(32, 32, 32)
                                                                .addGroup(simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                                        .addGroup(simpleCalculatorPaneLayout.createSequentialGroup()
                                                                                .addComponent(addButton)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(minusButton))
                                                                        .addComponent(backSpaceButton, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(openBracketButton)
                                                        .addComponent(powerButton)
                                                        .addComponent(closeBracketButton))
                                                .addGap(0, 12, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        simpleCalculatorPaneLayout.setVerticalGroup(
                simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(simpleCalculatorPaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                        .addGroup(simpleCalculatorPaneLayout.createSequentialGroup()
                                                .addComponent(inputField, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(answerField, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(sevenButton)
                                                        .addComponent(nineButton)
                                                        .addComponent(eightButton))
                                                .addGap(18, 18, 18)
                                                .addGroup(simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(fourButton)
                                                        .addComponent(sixButton)
                                                        .addComponent(fiveButton))
                                                .addGap(18, 18, 18)
                                                .addGroup(simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(oneButton)
                                                        .addComponent(threeButton)
                                                        .addComponent(twoButton))
                                                .addGap(18, 18, 18)
                                                .addGroup(simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(zeroButton)
                                                        .addComponent(solveButton)
                                                        .addComponent(clearButton))
                                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(simpleCalculatorPaneLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addGroup(simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(backSpaceButton)
                                                        .addComponent(powerButton))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(addButton)
                                                        .addComponent(minusButton)
                                                        .addComponent(openBracketButton))
                                                .addGap(18, 18, 18)
                                                .addGroup(simpleCalculatorPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(divideButton)
                                                        .addComponent(multiplyButton)
                                                        .addComponent(closeBracketButton))
                                                .addGap(64, 64, 64))))
        );

        mainTabbedPane.addTab("Simple Calculator", simpleCalculatorPane);

        checkSidesButton.setText("Check Sides");
        checkSidesButton.addActionListener(evt -> checkSidesButtonActionPerformed(evt));

        decimalPointSelector.setMajorTickSpacing(1);
        decimalPointSelector.setMaximum(8);
        decimalPointSelector.setPaintLabels(true);
        decimalPointSelector.setPaintTicks(true);
        decimalPointSelector.setSnapToTicks(true);
        decimalPointSelector.setValue(4);

        decimalPointLabel.setText("Select decimal points:");

        isTriangleLabel.setText("Is Right Triangle: ");

        areaLabel.setText("Area = ");

        angle1Label.setText("Angle 1 = ");

        angle2Label.setText("Angle 2 = ");

        angle3Label.setText("Angle 3 =");

        GroupLayout trianglePaneLayout = new GroupLayout(trianglePane);
        trianglePane.setLayout(trianglePaneLayout);
        trianglePaneLayout.setHorizontalGroup(
                trianglePaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(trianglePaneLayout.createSequentialGroup()
                                .addGroup(trianglePaneLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                        .addGroup(trianglePaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                .addGroup(trianglePaneLayout.createSequentialGroup()
                                                        .addContainerGap()
                                                        .addComponent(firstSideField, GroupLayout.PREFERRED_SIZE, 83, GroupLayout.PREFERRED_SIZE)
                                                        .addGap(44, 44, 44)
                                                        .addComponent(secondSideField, GroupLayout.PREFERRED_SIZE, 86, GroupLayout.PREFERRED_SIZE)
                                                        .addGap(44, 44, 44)
                                                        .addComponent(thirdSideField, GroupLayout.PREFERRED_SIZE, 83, GroupLayout.PREFERRED_SIZE))
                                                .addGroup(trianglePaneLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(GroupLayout.Alignment.LEADING, trianglePaneLayout.createSequentialGroup()
                                                                .addGap(121, 121, 121)
                                                                .addComponent(checkSidesButton, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(GroupLayout.Alignment.LEADING, trianglePaneLayout.createSequentialGroup()
                                                                .addGap(57, 57, 57)
                                                                .addGroup(trianglePaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                        .addGroup(trianglePaneLayout.createSequentialGroup()
                                                                                .addComponent(angle2Label)
                                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(angle3Label))
                                                                        .addGroup(trianglePaneLayout.createSequentialGroup()
                                                                                .addComponent(isTriangleLabel)
                                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                                        .addGroup(trianglePaneLayout.createSequentialGroup()
                                                                                .addComponent(areaLabel)
                                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(angle1Label))))))
                                        .addGroup(GroupLayout.Alignment.LEADING, trianglePaneLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(decimalPointLabel)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(decimalPointSelector, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        trianglePaneLayout.setVerticalGroup(
                trianglePaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(trianglePaneLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(trianglePaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(thirdSideField, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(firstSideField, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(secondSideField, GroupLayout.PREFERRED_SIZE, 40, GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(trianglePaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(decimalPointSelector, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(decimalPointLabel))
                                .addGap(18, 18, 18)
                                .addComponent(checkSidesButton)
                                .addGap(18, 18, 18)
                                .addComponent(isTriangleLabel)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(trianglePaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(areaLabel)
                                        .addComponent(angle1Label))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(trianglePaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(angle2Label)
                                        .addComponent(angle3Label))
                                .addContainerGap(22, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Check Triangle", trianglePane);


        x1Label.setText("x");


        y1Label.setText("y");


        x2Label.setText("x");


        y2Label.setText("y");

        equals1Label.setText("=");

        equals2Label.setText("=");


        plus1Label.setText("+");

        plus2Label.setText("+");

        solveEquationsButton.setText("Solve Equations");
        solveEquationsButton.addActionListener(evt -> solveEquationsButtonActionPerformed(evt));

        equationYAnswerLabel.setText("Y = ");

        equationXAnswerLabel.setText("X = ");

        GroupLayout equationPaneLayout = new GroupLayout(equationPane);
        equationPane.setLayout(equationPaneLayout);
        equationPaneLayout.setHorizontalGroup(
                equationPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(equationPaneLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addGroup(equationPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(equationPaneLayout.createSequentialGroup()
                                                .addGroup(equationPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(equationPaneLayout.createSequentialGroup()
                                                                .addComponent(x1TextField, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
                                                                .addGap(4, 4, 4)
                                                                .addComponent(x1Label)
                                                                .addGap(13, 13, 13)
                                                                .addComponent(plus1Label)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(y1TextField, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
                                                                .addGap(4, 4, 4)
                                                                .addComponent(y1Label))
                                                        .addGroup(GroupLayout.Alignment.TRAILING, equationPaneLayout.createSequentialGroup()
                                                                .addComponent(x2TextField, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
                                                                .addGap(4, 4, 4)
                                                                .addComponent(x2Label)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(plus2Label)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(y2TextField, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
                                                                .addGap(4, 4, 4)
                                                                .addComponent(y2Label)))
                                                .addGap(26, 26, 26)
                                                .addGroup(equationPaneLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                                        .addComponent(equals1Label)
                                                        .addComponent(equals2Label))
                                                .addGap(28, 28, 28)
                                                .addGroup(equationPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(c1TextField, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(c2TextField, GroupLayout.PREFERRED_SIZE, 29, GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(equationPaneLayout.createSequentialGroup()
                                                .addGap(70, 70, 70)
                                                .addGroup(equationPaneLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(solveEquationsButton)
                                                        .addGroup(equationPaneLayout.createSequentialGroup()
                                                                .addComponent(equationXAnswerLabel)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(equationYAnswerLabel)))))
                                .addContainerGap(121, Short.MAX_VALUE))
        );
        equationPaneLayout.setVerticalGroup(
                equationPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(equationPaneLayout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addGroup(equationPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(x1TextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(x1Label)
                                        .addComponent(y1TextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(y1Label)
                                        .addComponent(equals1Label)
                                        .addComponent(c1TextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(plus1Label))
                                .addGap(18, 18, 18)
                                .addGroup(equationPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(x2TextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(x2Label)
                                        .addComponent(y2TextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(y2Label)
                                        .addComponent(equals2Label)
                                        .addComponent(c2TextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(plus2Label))
                                .addGap(33, 33, 33)
                                .addComponent(solveEquationsButton)
                                .addGap(29, 29, 29)
                                .addGroup(equationPaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(equationYAnswerLabel)
                                        .addComponent(equationXAnswerLabel))
                                .addContainerGap(68, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Solve Equations", equationPane);

        lineOrCurveInstructionLabel.setText("Please enter the curve in the form of y = ax^b + cx^d + ex^f");

        lineOrCurveTextField.addActionListener(evt -> lineOrCurveTextFieldActionPerformed(evt));

        findGradientLabel.setText("Find Gradient");

        gradientEnterXLabel.setText("Enter x:");

        gradientAnswerLabel.setText("Gradient = ");

        GroupLayout lineOrCurvePaneLayout = new GroupLayout(lineOrCurvePane);
        lineOrCurvePane.setLayout(lineOrCurvePaneLayout);
        lineOrCurvePaneLayout.setHorizontalGroup(
                lineOrCurvePaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(lineOrCurvePaneLayout.createSequentialGroup()
                                .addGroup(lineOrCurvePaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(lineOrCurvePaneLayout.createSequentialGroup()
                                                .addGap(28, 28, 28)
                                                .addGroup(lineOrCurvePaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(lineOrCurveInstructionLabel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(lineOrCurveTextField)))
                                        .addGroup(lineOrCurvePaneLayout.createSequentialGroup()
                                                .addGap(122, 122, 122)
                                                .addComponent(findGradientLabel))
                                        .addGroup(lineOrCurvePaneLayout.createSequentialGroup()
                                                .addGap(50, 50, 50)
                                                .addGroup(lineOrCurvePaneLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                                        .addComponent(gradientAnswerLabel)
                                                        .addComponent(gradientEnterXLabel, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(gradientXTextField, GroupLayout.PREFERRED_SIZE, 65, GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(48, Short.MAX_VALUE))
        );
        lineOrCurvePaneLayout.setVerticalGroup(
                lineOrCurvePaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(lineOrCurvePaneLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(lineOrCurveInstructionLabel)
                                .addGap(29, 29, 29)
                                .addComponent(lineOrCurveTextField, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(lineOrCurvePaneLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(gradientXTextField, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(gradientEnterXLabel))
                                .addGap(26, 26, 26)
                                .addComponent(findGradientLabel)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addComponent(gradientAnswerLabel)
                                .addGap(39, 39, 39))
        );

        mainTabbedPane.addTab("Calculate Gradient", lineOrCurvePane);

        irqInputINstructionLabel.setText("Please enter all the values seperated by space");

        calculateIRQButton.setText("Calculate IRQ");
        calculateIRQButton.addActionListener(evt -> calculateIRQButtonActionPerformed(evt));

        noOfValuesLable.setText("No of Values = ");

        irqAnswerLabel.setText("IRQ = ");

        GroupLayout irqPaneLayout = new GroupLayout(irqPane);
        irqPane.setLayout(irqPaneLayout);
        irqPaneLayout.setHorizontalGroup(
                irqPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(irqPaneLayout.createSequentialGroup()
                                .addGroup(irqPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(irqPaneLayout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(irqInputTextField))
                                        .addGroup(irqPaneLayout.createSequentialGroup()
                                                .addGap(43, 43, 43)
                                                .addComponent(irqInputINstructionLabel, GroupLayout.PREFERRED_SIZE, 263, GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 46, Short.MAX_VALUE)))
                                .addContainerGap())
                        .addGroup(GroupLayout.Alignment.TRAILING, irqPaneLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(calculateIRQButton)
                                .addGap(130, 130, 130))
                        .addGroup(irqPaneLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(irqPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(irqAnswerLabel)
                                        .addComponent(noOfValuesLable))
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        irqPaneLayout.setVerticalGroup(
                irqPaneLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(irqPaneLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(irqInputINstructionLabel)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(irqInputTextField, GroupLayout.PREFERRED_SIZE, 36, GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(calculateIRQButton)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                                .addComponent(noOfValuesLable)
                                .addGap(18, 18, 18)
                                .addComponent(irqAnswerLabel)
                                .addGap(39, 39, 39))
        );

        mainTabbedPane.addTab("Inter Quartile Range", irqPane);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(mainTabbedPane)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(mainTabbedPane)
        );

        pack();
    }

    private void sevenButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "7");
    }

    private void nineButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "9");
    }

    private void eightButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "8");
    }

    private void fourButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "4");
    }

    private void fiveButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "5");
    }

    private void sixButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "6");
    }

    private void oneButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "1");
    }

    private void twoButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "2");
    }

    private void threeButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "3");
    }

    private void addButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "+");
    }

    private void minusButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "-");
    }

    private void divideButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "/");
    }

    private void multiplyButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "*");
    }

    private void zeroButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "0");
    }

    private void solveButtonActionPerformed(ActionEvent evt) {
        String inputString = this.inputField.getText();

        try {
            long answer = SimpleCalculator.evaluateExpression(inputString);
            this.answerField.setText(String.valueOf(answer));
        } catch (ArithmeticException ae) {
            this.answerField.setText("Syntax Error!");
        } catch (StringIndexOutOfBoundsException sioobe) {
            this.answerField.setText("Missing Operand/Operator");
        }


    }


    private void solveEquationsButtonActionPerformed(ActionEvent evt) {
        double x1, x2, y1, y2, c1, c2;
        try {
            x1 = Double.parseDouble(this.x1TextField.getText());
            x2 = Double.parseDouble(this.x2TextField.getText());
            y1 = Double.parseDouble(this.y1TextField.getText());
            y2 = Double.parseDouble(this.y2TextField.getText());
            c1 = Double.parseDouble(this.c1TextField.getText());
            c2 = Double.parseDouble(this.c2TextField.getText());
        } catch (NumberFormatException nfe) {
            this.equationXAnswerLabel.setText("X = NaN");
            this.equationYAnswerLabel.setText("Y = NaN");
            return;
        }
        double[] answer;
        try {
            answer = EquationSolver.equationSolver(x1, x2, y1, y2, c1, c2);
        } catch (IllegalArgumentException iae) {
            this.equationXAnswerLabel.setText("X = N/A");
            this.equationYAnswerLabel.setText("Y = N/A");
            return;
        }

        this.equationXAnswerLabel.setText("X = " + answer[0]);
        this.equationYAnswerLabel.setText("Y = " + answer[1]);
    }

    private void backSpaceButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText().substring(0, this.inputField.getText().length() - 1));
    }

    private void openBracketButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "(");
    }

    private void closeBracketButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + ")");
    }

    private void powerButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText(this.inputField.getText() + "^");
    }

    private void clearButtonActionPerformed(ActionEvent evt) {
        this.inputField.setText("");
        this.answerField.setText("");
    }

    private void checkSidesButtonActionPerformed(ActionEvent evt) {
        double side1, side2, side3;

        try {
            side1 = Double.parseDouble(this.firstSideField.getText());
            side2 = Double.parseDouble(this.secondSideField.getText());
            side3 = Double.parseDouble(this.thirdSideField.getText());
        } catch (NumberFormatException nfe) {
            this.areaLabel.setText("Area = NaN");
            this.angle1Label.setText("Angle 1 = NaN");
            this.angle2Label.setText("Angle 2 = NaN");
            this.angle3Label.setText("Angle 3 = NaN");
            return;
        }

        int prec = this.decimalPointSelector.getValue();

        try {
            double[] answer = TriangleCalculator.trangleValues(side1, side2, side3, prec);

            if (answer[1] == 90 || answer[2] == 90 || answer[3] == 90)
                this.isTriangleLabel.setText("Is Right Triangle: YES");
            else
                this.isTriangleLabel.setText("Is Right Triangle: NO");

            this.areaLabel.setText("Area = " + answer[0]);
            this.angle1Label.setText("Angle 1 = " + answer[1]);
            this.angle2Label.setText("Angle 2 = " + answer[2]);
            this.angle3Label.setText("Angle 3 = " + answer[3]);
        } catch (IllegalArgumentException iae) {
            this.areaLabel.setText("Area = N/A");
            this.angle1Label.setText("Angle 1 = N/A");
            this.angle2Label.setText("Angle 2 = N/A");
            this.angle3Label.setText("Angle 3 = N/A");
        }

    }

    private void lineOrCurveTextFieldActionPerformed(ActionEvent evt) {
        int x;
        try {
            x = Integer.parseInt(this.gradientXTextField.getText());
        } catch (NumberFormatException nfe) {
            this.gradientAnswerLabel.setText("Gradient = NaN");
            return;
        }

        String equation = this.lineOrCurveTextField.getText();

        int slope;
        try {
            slope = GradientSolver.findGradient(equation, x);
        } catch (NumberFormatException nfe) {
            this.gradientAnswerLabel.setText("Gradient = NaN");
            return;
        }

        this.gradientAnswerLabel.setText("Gradient = " + slope);
    }

    private void calculateIRQButtonActionPerformed(ActionEvent evt) {
        String numbers = this.irqInputTextField.getText().trim();
        int[] list;
        try {
            list =
                    Arrays.stream(numbers.split(" ")).map(Integer::parseInt).toList().stream().mapToInt(Integer::intValue).toArray();
        } catch (NumberFormatException nfe) {
            this.noOfValuesLable.setText("No of Values = N/A");
            this.irqAnswerLabel.setText("No of Values = N/A");
            return;
        }

        int irq = IRQClass.findIRQ(list);

        this.noOfValuesLable.setText("No of Values = " + list.length);
        this.irqAnswerLabel.setText("IRQ = " + irq);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException |
                 UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Calculator().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton addButton;
    private JLabel angle1Label;
    private JLabel angle2Label;
    private JLabel angle3Label;
    private JTextField answerField;
    private JLabel areaLabel;
    private JButton backSpaceButton;
    private JTextField c1TextField;
    private JTextField c2TextField;
    private JButton calculateIRQButton;
    private JButton checkSidesButton;
    private JButton clearButton;
    private JButton closeBracketButton;
    private JLabel decimalPointLabel;
    private JSlider decimalPointSelector;
    private JButton divideButton;
    private JButton eightButton;
    private JLabel equals1Label;
    private JLabel equals2Label;
    private JPanel equationPane;
    private JLabel equationXAnswerLabel;
    private JLabel equationYAnswerLabel;
    private JButton findGradientLabel;
    private JTextField firstSideField;
    private JButton fiveButton;
    private JButton fourButton;
    private JLabel gradientAnswerLabel;
    private JLabel gradientEnterXLabel;
    private JTextField gradientXTextField;
    private JTextField inputField;
    private JLabel irqAnswerLabel;
    private JLabel irqInputINstructionLabel;
    private JTextField irqInputTextField;
    private JPanel irqPane;
    private JLabel isTriangleLabel;
    private JLabel lineOrCurveInstructionLabel;
    private JPanel lineOrCurvePane;
    private JTextField lineOrCurveTextField;
    private JTabbedPane mainTabbedPane;
    private JButton minusButton;
    private JButton multiplyButton;
    private JButton nineButton;
    private JLabel noOfValuesLable;
    private JButton oneButton;
    private JButton openBracketButton;
    private JLabel plus1Label;
    private JLabel plus2Label;
    private JButton powerButton;
    private JTextField secondSideField;
    private JButton sevenButton;
    private JPanel simpleCalculatorPane;
    private JButton sixButton;
    private JButton solveButton;
    private JButton solveEquationsButton;
    private JTextField thirdSideField;
    private JButton threeButton;
    private JPanel trianglePane;
    private JButton twoButton;
    private JLabel x1Label;
    private JTextField x1TextField;
    private JLabel x2Label;
    private JTextField x2TextField;
    private JLabel y1Label;
    private JTextField y1TextField;
    private JLabel y2Label;
    private JTextField y2TextField;
    private JButton zeroButton;
    // End of variables declaration//GEN-END:variables
}
